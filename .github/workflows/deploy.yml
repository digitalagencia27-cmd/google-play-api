name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths: [ '!PostmanCollections/**' , '!./github/**' ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Cache Node.js dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci
      
      - name: Start Server
        run: npm start & npx wait-on http://localhost:3000

      - name: Run Tests
        run: npm test

  build_and_push_docker_image:
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build and Push Docker Image
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64 -t ghcr.io/${{ github.repository }}:latest .
          docker buildx stop
          
  deploy_to_fly:
    needs: build_and_push_docker_image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      
      - name: Get FlyCtl
        uses: superfly/flyctl-actions/setup-flyctl@master
      
      - name: Deploy to Fly        
        run: |
          flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Cache FlyCtl binary
        uses: actions/cache@v2
        with:
          path: ~/.fly
          key: ${{ runner.os }}-flyctl
          restore-keys: |
            ${{ runner.os }}-flyctl-

      - name: Get deploy url
        run: |
          FLY_DEPLOY_URL=$(flyctl status --app googleplayapi -j | jq -r '.url')
          echo "FLY_DEPLOY_URL=$FLY_DEPLOY_URL" >> $GITHUB_ENV

      - name: Create Deployment Check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deploymentUrl = process.env.FLY_DEPLOY_URL;
            
            const repo = context.repo;
            const sha = context.sha;

            async function createCheck() {
              await github.checks.create({
                ...repo,
                name: 'Deployment to Fly.io',
                head_sha: sha,
                status: 'completed',
                conclusion: 'success',
                output: {
                  title: 'Deployment Successful',
                  summary: `Deployment to Fly.io: [${deploymentUrl}](${deploymentUrl})`,
                },
              });
            }

            createCheck();
